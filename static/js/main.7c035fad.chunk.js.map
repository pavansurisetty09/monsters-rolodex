{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/searchbox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","searchHandler","searchText","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","fMonster","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAgBeA,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAG,UAAKJ,EAAQK,QAElB,6BAAKL,EAAQK,OACb,4BAAIL,EAAQM,YCEHC,G,MATE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,GACCA,EAASC,KAAI,SAACT,GAAD,OAAa,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCLxCO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,cAAhB,EAA+BC,WAA/B,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLC,SAAUH,EACVD,YAAaA,MCkCFK,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFJ,cAAgB,SAACK,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAACC,GACxC,OAAOA,EAAS1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAE1D,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,8BACA,cAAC,EAAD,CACEU,YAAY,iBACZC,cAAegB,KAAKhB,gBAEtB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c035fad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n        alt={`${monster.name}`}\r\n      />\r\n      <h1>{monster.name}</h1>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nconst CardList = ({ monsters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters &&\r\n        monsters.map((monster) => <Card key={monster.id} monster={monster} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nexport const SearchBox = ({ placeholder, searchHandler, searchText }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    onChange={searchHandler}\r\n    placeholder={placeholder}\r\n  />\r\n);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList\";\nimport { SearchBox } from \"./components/searchbox/SearchBox\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  searchHandler = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((fMonster) => {\n      return fMonster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1 className=\"a-title\">Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          searchHandler={this.searchHandler}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}